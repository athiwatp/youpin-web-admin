"use strict";riot.tag2("dashboard-new-issue-list",'<div class="new-issue-list"> <h1 class="page-title">New issue this week</h1> <ul> <li class="item" each="{data}"><a href="#!issue-id:{_id}"><img riot-src="{photos[0]}"></a><span><a href="#!issue-id:{_id}"><b>{detail} </br></b></a>{created_time} / {status} / {assigned_department.name} / {level}</span></li> </ul> </div>',"","",function(e){var a=this;a.data=[],api.getNewIssues(function(e){a.data=_.map(e.data,function(e){return e.created_time=moment(e.created_time).fromNow(),e}),a.update()})}),riot.tag2("dashboard-recent-activity",'<div class="recent-activity"><b>Recent Activity</b> <ul> <li class="activity" each="{data}"><span><a href="#!issue-id:{pin_id}"><b>{description} </br></b></a>{timestamp}</span></li> </ul> </div>',"","",function(e){var a=this;a.data=[],api.getRecentActivities(function(e){a.data=_.map(e,function(e){return e.timestamp=moment(e.timestamp).fromNow(),e}),a.update()})}),riot.tag2("dashboard-table-summary",'<h1 class="page-title">Overview</h1> <ul class="duration-selector"> <li class="{highlight: activeSelector == i}" each="{dur, i in durationSelectors}" onclick="{selectDuration(i)}" title="{dur.start}-today"> <div>{dur.name}</div> </li> </ul> <table class="summary"> <tr> <th class="team">Team</th> <th class="assigned">Assigned</th> <th class="processing">Processing</th> <th class="resolved">Resolved</th> <th class="rejected">Rejected</th> <th class="performance">Performance Index</th> </tr> <tr class="row {hide: shouldHideRow(department._id)}" each="{data}"> <td class="team">{name}</td> <td class="numeric-col">{summary.assigned}</td> <td class="numeric-col">{summary.processing}</td> <td class="numeric-col">{summary.resolved}</td> <td class="numeric-col">{summary.rejected}</td> <td class="performance {positive: performance &gt; 0, negative: performance &lt; 0}">{performance}</td> </tr> </table>',"","",function(e){function a(e,a,t){return moment().isoWeekday(1).startOf(e).add(t,a).format(i)}function t(e,a){var t=_.reduce(e,function(e,t){return e+=a[t]},0),s=t-(a.unverified+a.rejected);return 0==s?0:a.resolved/s}var s=this,i="YYYY-MM-DD",n=moment().add(1,"day").format(i);s.activeSelector=0,this.durationSelectors=[{name:"week",start:a("week","day",1)},{name:"1 months",start:a("month","month",0)},{name:"2 months",start:a("month","month",-1)},{name:"6 months",start:a("month","month",-5)}],this.selectDuration=function(e){return function(){s.activeSelector=e;var a=s.durationSelectors[e].start;api.getSummary(a,n,function(e){var a=Object.keys(e),i=a.length>0?Object.keys(e[a[0]]):[],n=_.map(a,function(a){return{name:a,summary:e[a],performance:t(i,e[a])}}),r=_.reduce(i,function(e,a){return e[a]=0,e},{});r=_.reduce(n,function(e,a){return _.each(i,function(t){e[t]+=a.summary[t]}),e},r);var d={name:"All",summary:r,performance:t(i,r)};s.data=[d].concat(n),s.update()})}},this.selectDuration(0)(),this.shouldHideRow=function(e){return"organization_admin"!=user.role&&user.department!=e}}),riot.tag2("image-slider",'<div class="slider-list"> <yield></yield> </div>',"","",function(e){var a=this;a.item=e.item||"div",a.image="false"!==e.image,a.viewer="true"===e.viewer,a.arrows=!("false"===e.arrows),a.dots="true"===e.dots,a.autoplay=!("false"===e.autoplay),a.autoplay_speed=+(e.autoplaySpeed||12e3),a.fade=!("false"===e.fade),a.extendClass=[],a.extendClass=a.extendClass.join(" "),a.on("mount",function(){a.$slider=$(a.root).find(".slider-list"),a.$slider.children().show(),a.$slider.on("init reinit",function(e){a.image&&$(this).find(".slider-item").each(function(){var e=$(this),t=e.attr("data-src");t||(t=/url\(['"]?([^'"]*)['"]?\)/gi.exec(e.css("background-image"))[1]),e.empty(),"img"===a.item?e.append($("<img/>").addClass(a.extendClass).attr("data-src",t)):e.append($('<div class="image hide-on-error"/>').addClass(a.extendClass).attr("data-src",t).css("background-image","url('"+t+"')"))})}).on("setPosition",function(e,t){if(a.lazyload){var s=t.currentSlide;s=[0===s?t.$slides.length-1:s-1,s,s===t.$slides.length-1?0:s+1];_.compact($(t.$slides[s[0]]).add(t.$slides[s[1]]).add(t.$slides[s[2]]).find(".lazyload:not(.lazyloaded)").toArray())}}).slick({infinite:!0,speed:(a.fade,1200),fade:a.fade,autoplay:a.autoplay,autoplaySpeed:a.autoplay_speed,arrows:a.arrows,dots:a.dots,cssEase:"ease-in"}),a.viewer})}),riot.tag2("issue-page",'<h1 class="page-title">Issue <div class="bt-new-issue"><a class="btn" href="#manage-issue-modal">Create New Issue</a></div> </h1> <ul class="status-selector"> <li class="{active: name == selectedStatus}" each="{statuses}" onclick="{parent.select(name)}">{name}({totalIssues})</li> </ul> <div class="menu-bar"> <div class="sorting">â–¾</div> <div class="list-or-map"><span class="active">List</span><span class="separator">/</span><span>Map</span></div> <div class="clearfix"></div> </div> <ul class="issue-list"> <li class="issue clearfix" each="{p in pins}"> <div class="issue-img"> <div class="img responsive-img" riot-style="background-image: url(&quot;{_.get(p.photos, &quot;0&quot;)}&quot;)"></div> </div> <div class="issue-body"> <div class="issue-id"><b>ID</b><span href="#manage-issue-modal" data-id="{p._id}">{p._id}</span></div> <div class="issue-desc">{p.detail}</div> <div class="issue-category"> <div><b>Category</b></div><span class="bubble" each="{cat in p.categories}">{cat}</span> </div> <div class="issue-location"> <div><b>Location</b></div><span class="bubble">Building A</span> </div> <div class="clearfix"></div> <div class="issue-tags"> <div><b>Tag</b></div><span class="bubble" each="{tag in p.tags}">{tag}</span> </div> </div> <div class="issue-info"> <div><b>Status</b></div><span class="big-text">{p.status}</span> <div class="clearfix"></div> <div><b>Dept.</b></div><span class="big-text">{p.assigned_department ? p.assigned_department.name : \'-\'}</span> <div class="clearfix"></div> <div title="assigned to"><i class="icon material-icons">face</i>{p.assigned_user.name}</div> <div title="created at"><i class="icon material-icons">access_time</i>{moment(p.created_time).fromNow()}</div><a class="bt-manage-issue btn" href="#!issue-id:{p._id}">Issue</a> </div> </li> <div class="load-more-wrapper"><a class="load-more {active: hasMore}" onclick="{loadMore()}">Load More</a></div> </ul>',"","",function(e){var a=this,t=this;this.pins=[],this.statusesForRole=[];var s={};"super_admin"==user.role||"organization_admin"==user.role?this.statusesForRole=["unverified","verified","assigned","processing","resolved","rejected"]:(this.statusesForRole=["assigned","processing","resolved"],s.assigned_department=user.department),this.statuses=[],this.hasMore=!0,Promise.map(this.statusesForRole,function(e){var a=_.extend({},s,{$limit:1});return api.getPins(e,a).then(function(a){return{name:e,totalIssues:a.total}})}).then(function(e){t.statuses=e,t.update(),a.select(t.statuses[0].name)()}),this.selectedStatus=this.statusesForRole[0],this.select=function(e){return function(){t.selectedStatus=e,api.getPins(e,s).then(function(e){t.pins=e.data,t.updateHasMoreButton(e),t.update()})}},this.loadMore=function(){return function(){var e=_.extend({},s,{$skip:t.pins.length});api.getPins(t.selectedStatus,e).then(function(e){t.pins=t.pins.concat(e.data),t.updateHasMoreButton(e),t.update()})}},this.updateHasMoreButton=function(e){t.hasMore=e.total-(e.skip+e.data.length)>0}}),riot.tag2("preloader",'<div class="preloader-wrapper active {class}"> <div class="spinner-layer spinner-blue-only"> <div class="circle-clipper left"> <div class="circle"></div> </div> <div class="gap-patch"> <div class="circle"></div> </div> <div class="circle-clipper right"> <div class="circle"></div> </div> </div> </div>',"","",function(e){var a=this;a.class=e.class}),riot.tag2("search-box",'<a class="toggle-btn" href="#" onclick="{clickToggleSearch}"><i class="icon material-icons">search</i></a> <div class="search-box-wrapper" name="wrapper"> <form onsubmit="{submitSearch}"> <input class="flat" type="search" name="q" placeholder="{placeholder}" onblur="{clickToggleSearch}" tabindex="-1"> </form> </div>','search-box,[riot-tag="search-box"],[data-is="search-box"]{ display: inline-block; } search-box .toggle-btn,[riot-tag="search-box"] .toggle-btn,[data-is="search-box"] .toggle-btn{ display: inline-block; opacity: 1; transition: all 0.2s ease-out; } search-box .search-box-wrapper,[riot-tag="search-box"] .search-box-wrapper,[data-is="search-box"] .search-box-wrapper{ display: inline-block; width: 0; opacity: 0; padding-left: 0; padding-right: 0; transition: all 0.2s ease-out; } search-box.open .toggle-btn,[riot-tag="search-box"].open .toggle-btn,[data-is="search-box"].open .toggle-btn{ width: 0; opacity: 0; padding-left: 0; padding-right: 0; } search-box.open .search-box-wrapper,[riot-tag="search-box"].open .search-box-wrapper,[data-is="search-box"].open .search-box-wrapper{ width: 200px; opacity: 1; padding-left: 1rem; padding-right: 1rem; }','class="{open: open}"',function(e){var a=this;a.open=!1,a.path=e.path||"",a.placeholder=e.placeholder,a.on("updated",function(){a.open&&$(a.q).focus()}),a.clickToggleSearch=function(e){e.preventDefault(),a.open=!a.open,$("body")[a.open?"addClass":"removeClass"]("global-search-active")},a.submitSearch=function(e){e.preventDefault(),location.href=util.site_url(a.path,{q:a.q.value})}}),riot.tag2("setting-department",'<h1 class="page-title">Setting Department</h1> <div class="row"> <div class="col s12 right-align"><a class="btn" onclick="{createDepartment}">Create department</a></div> </div> <ul> <li class="department" each="{dept in departments}"> <div class="row"> <div class="col s1"><b>{dept.name}</b></div> <div class="col s6"><span onclick="{editDepartment(dept._id)}">edit</span></div> </div> </li> </ul> <div class="modal" id="edit-department-form"> <div class="modal-header"> <h3>Edit Department</h3> </div> <div class="divider"></div> <div class="modal-content">something</div> </div> <div class="modal" id="create-department-form"> <div class="modal-header"> <h3>Create Department</h3> </div> <div class="modal-content"> <h5>Department name</h5> <div class="input-field"> <input type="text" name="name"> </div> </div> <div class="row"> <div class="col s12 right-align"><a class="btn-flat" onclick="{closeCreateModal}">Cancel</a>&nbsp;<a class="btn" onclick="{confirmCreate}">Create</a></div> </div> </div>',"","",function(e){var a=this,t=void 0,s=void 0;$(document).ready(function(){t=$("#edit-department-form").modal(),s=$("#create-department-form").modal()}),this.departments=[],a.loadData=function(){api.getDepartments().then(function(e){a.departments=e.data,a.update()})},a.loadData(),a.editDepartment=function(e){return function(){var e=t;console.log("------"),e.trigger("openModal")}},a.createDepartment=function(){var e=s,a=e.find('input[name="name"]');a.val(""),console.log("creating new department"),e.trigger("openModal")},a.closeCreateModal=function(){var e=s;e.trigger("closeModal")},a.confirmCreate=function(){var e=s,t=e.find('input[name="name"]');console.log("creating "+t.val()),api.createDepartments(user.organization,t.val()).then(function(e){return"201"!=e.status?(alert("something wrong : check console"),void console.log(e)):(a.closeCreateModal(),void a.loadData())})}}),riot.tag2("setting-user",'<h1 class="page-title">Setting User</h1> <div class="row"> <div class="col s12 right-align"><a class="btn" onclick="{createUser}">Create user</a></div> </div> <ul></ul> <table> <thead> <td>Name</td> <td>Email</td> <td>Department</td> <td>Role</td> <td>#</td> </thead> <tr class="user" each="{user in users}"> <td>{user.name}</td> <td>{user.email}</td> <td>{user.department.name}</td> <td>{user.role}</td> <td><span onclick="{changeRole(user)}">change role</span></td> </tr> </table> <div class="modal" id="change-role-form"> <div class="modal-header"> <h3>Change role of {editingUser.name}</h3> </div> <div class="divider"></div> <div class="modal-content"> <h5>Role</h5> <div class="input-field col s12"> <select name="role"> <option each="{role in availableRoles}" value="{role}" __selected="{role == editingUser.role}">{role}</option> </select> </div> <div class="department-selector-wrapper"> <h5>Department</h5> <div class="input-field col s12"> <select name="department"> <option each="{dept in departments}" value="{dept._id}" __selected="{dept._id == editingUser.department._id}">{dept.name}</option> </select> </div> </div> <div class="padding"></div> </div> <div class="row"> <div class="col s12 right-align"><a class="btn-flat" onclick="{closeChangeRoleModal}">Cancel</a>&nbsp;<a class="btn" onclick="{confirmChangeRole}">Save</a></div> </div> </div> <div class="modal" id="create-user-form"> <div class="modal-header"> <h3>Create User</h3> </div> <div class="modal-content"> <h5>Name</h5> <div class="input-field"> <input type="text" name="name"> </div> <h5>Email</h5> <div class="input-field"> <input type="text" name="email"> </div> <h5>Password</h5> <div class="input-field"> <input type="text" name="password"> </div> <h5>Confirm Password</h5> <div class="input-field"> <input type="text" name="confirm-password"> </div> </div> <div class="row"> <div class="col s12 right-align"><a class="btn-flat" onclick="{closeCreateModal}">Cancel</a>&nbsp;<a class="btn" onclick="{confirmCreate}">Create</a></div> </div> </div>',"","",function(e){var a=this,t=void 0,s=void 0,i=void 0,n=void 0;this.availableRoles=["department_head","department_officer"],_.find(["super_admin","organization_admin"],function(e){return e==user.role})&&(this.availableRoles=["organization_admin"].concat(a.availableRoles)),$(document).ready(function(){t=$("#change-role-form").modal(),s=$("#create-user-form").modal(),i=t.find('select[name="role"]'),n=t.find('select[name="department"]'),i.on("change",function(){i.val()})}),this.users=[],a.loadData=function(){api.getUsers().then(function(e){a.users=e.data,a.update()})},api.getDepartments().then(function(e){a.departments=e.data,a.loadData()}),a.changeRole=function(e){return function(){a.editingUser=e,a.update(),i.material_select(),n.material_select();var s=t;s.trigger("openModal")}},a.confirmChangeRole=function(){var e={role:i.val(),department:[n.val()]};"super_admin"==e.role&&delete e.department,api.updateUser(a.editingUser._id,e).then(function(e){return"200"!=e.status?(alert("something wrong : check console"),void console.log(e)):(a.closeChangeRoleModal(),void a.loadData())})},a.closeChangeRoleModal=function(){var e=t;e.trigger("closeModal")},a.createUser=function(){var e=s,a=e.find('input[name="name"]');a.val(""),e.trigger("openModal")},a.closeCreateModal=function(){var e=s;e.trigger("closeModal")},a.confirmCreate=function(){var e=s,t=["name","email","password","confirm-password"],i=_.reduce(t,function(a,t){return a[t]=e.find('input[name="'+t+'"]').val(),a},{});return i["confirm-password"]!=i.password?void alert("Password is not matched!"):(delete i["confirm-password"],void api.createUser(i).then(function(e){return"201"!=e.status?(alert("something wrong : check console"),void console.log(e)):(a.closeCreateModal(),void a.loadData())}))}});